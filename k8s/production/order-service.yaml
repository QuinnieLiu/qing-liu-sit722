apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  labels:
    app: order-service
    environment: production
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
        environment: production
    spec:
      enableServiceLinks: false  # Disable auto-generated service env vars
      containers:
      - name: order-service
        image: ${ACR_LOGIN_SERVER}/order-service:${IMAGE_TAG}
        ports:
        - containerPort: 8002
        env:
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_PORT
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RABBITMQ_HOST
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RABBITMQ_PORT
        - name: RABBITMQ_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RABBITMQ_USER
        - name: RABBITMQ_PASS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RABBITMQ_PASS
        - name: CUSTOMER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: CUSTOMER_SERVICE_URL
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  labels:
    app: order-service
    environment: production
spec:
  selector:
    app: order-service
  ports:
  - port: 8002
    targetPort: 8002
    name: http
  type: LoadBalancer